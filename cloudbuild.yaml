steps:
  # 1. Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/pvc-pro', '.']

  # 2. Push Docker image to Google Container Registry or Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/pvc-pro']

  # 3. Deploy to Cloud Run with secret volume mount
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - run
      - deploy
      - pvc-pro
      - --image=gcr.io/$PROJECT_ID/pvc-pro
      - --region=us-central1
      - --platform=managed
      - --allow-unauthenticated
      - --set-env-vars=CASHFREE_APP_ID=$$CASHFREE_APP_ID,CASHFREE_SECRET_KEY=$$CASHFREE_SECRET_KEY,CASHFREE_WEBHOOK_SECRET=$$CASHFREE_WEBHOOK_SECRET,FIREBASE_CREDENTIAL_PATH=/secrets/firebase/firebase-adminsdk.json
      - --update-secrets=firebase-adminsdk=/secrets/firebase/firebase-adminsdk.json:latest
      - --service-account=SERVICE_ACCOUNT_EMAIL  # Replace with your Cloud Run service account

# Substitutions for secrets (they are replaced securely at deploy time)
substitutions:
  _CASHFREE_APP_ID: "your_cashfree_app_id"
  _CASHFREE_SECRET_KEY: "your_cashfree_secret_key"
  _CASHFREE_WEBHOOK_SECRET: "your_cashfree_webhook_secret"

# Allow using secrets from Secret Manager
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/firebase-adminsdk/versions/latest
      env: FIREBASE_SECRET_PLACEHOLDER  # Just a placeholder (you mount as file)
